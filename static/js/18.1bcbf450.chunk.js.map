{"version":3,"sources":["shared/components/CardChart.js"],"names":["labelFormatter","label","format","Date","calculateMin","data","yKey","factor","max","Number","POSITIVE_INFINITY","forEach","element","Math","round","itemHeight","options","withStyles","theme","cardContentInner","marginTop","spacing","withTheme","props","color","title","classes","height","_useState","useState","_useState2","Object","_Users_priyankakhatri_IdeaProjects_magnus_infinity_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","anchorEl","setAnchorEl","_useState3","_useState4","selectedOption","setSelectedOption","handleClick","useCallback","event","currentTarget","formatter","value","getSubtitle","Error","processData","seconds","minSeconds","arr","i","length","timestamp","unshift","handleClose","selectOption","isOpen","Boolean","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_mui_material__WEBPACK_IMPORTED_MODULE_9__","_mui_material__WEBPACK_IMPORTED_MODULE_10__","pt","px","pb","display","justifyContent","_mui_material__WEBPACK_IMPORTED_MODULE_11__","variant","_mui_material__WEBPACK_IMPORTED_MODULE_12__","aria-label","aria-owns","undefined","aria-haspopup","onClick","size","_mui_icons_material_MoreVert__WEBPACK_IMPORTED_MODULE_17___default","_mui_material__WEBPACK_IMPORTED_MODULE_13__","id","open","onClose","PaperProps","style","maxHeight","width","disableScrollLock","map","option","_mui_material__WEBPACK_IMPORTED_MODULE_14__","key","selected","name","_mui_material__WEBPACK_IMPORTED_MODULE_15__","className","recharts__WEBPACK_IMPORTED_MODULE_2__","recharts__WEBPACK_IMPORTED_MODULE_3__","type","recharts__WEBPACK_IMPORTED_MODULE_4__","dataKey","domain","hide","recharts__WEBPACK_IMPORTED_MODULE_5__","recharts__WEBPACK_IMPORTED_MODULE_6__","stroke","fill","recharts__WEBPACK_IMPORTED_MODULE_7__","cursor","contentStyle","border","padding","borderRadius","shape","boxShadow","shadows","labelStyle","typography","body1","itemStyle","fontSize","letterSpacing","fontFamily","lineHeight","fontWeight"],"mappings":"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","file":"static/js/18.1bcbf450.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n  YAxis,\n} from \"recharts\";\nimport format from \"date-fns/format\";\nimport { Card, CardContent, Typography, IconButton, Menu, MenuItem, Box } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\n\nconst styles = (theme) => ({\n  cardContentInner: {\n    marginTop: theme.spacing(-4),\n  },\n});\n\nfunction labelFormatter(label) {\n  return format(new Date(label * 1000), \"MMMM d, p yyyy\");\n}\n\nfunction calculateMin(data, yKey, factor) {\n  let max = Number.POSITIVE_INFINITY;\n  data.forEach((element) => {\n    if (max > element[yKey]) {\n      max = element[yKey];\n    }\n  });\n  return Math.round(max - max * factor);\n}\n\nconst itemHeight = 216;\nconst options = [\"1 Week\", \"1 Month\", \"6 Months\"];\n\nfunction CardChart(props) {\n  const { color, data, title, classes, theme, height } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(\"1 Month\");\n\n  const handleClick = useCallback(\n    (event) => {\n      setAnchorEl(event.currentTarget);\n    },\n    [setAnchorEl]\n  );\n\n  const formatter = useCallback(\n    (value) => {\n      return [value, title];\n    },\n    [title]\n  );\n\n  const getSubtitle = useCallback(() => {\n    switch (selectedOption) {\n      case \"1 Week\":\n        return \"Last week\";\n      case \"1 Month\":\n        return \"Last month\";\n      case \"6 Months\":\n        return \"Last 6 months\";\n      default:\n        throw new Error(\"No branch selected in switch-statement\");\n    }\n  }, [selectedOption]);\n\n  const processData = useCallback(() => {\n    let seconds;\n    switch (selectedOption) {\n      case \"1 Week\":\n        seconds = 60 * 60 * 24 * 7;\n        break;\n      case \"1 Month\":\n        seconds = 60 * 60 * 24 * 31;\n        break;\n      case \"6 Months\":\n        seconds = 60 * 60 * 24 * 31 * 6;\n        break;\n      default:\n        throw new Error(\"No branch selected in switch-statement\");\n    }\n    const minSeconds = new Date() / 1000 - seconds;\n    const arr = [];\n    for (let i = 0; i < data.length; i += 1) {\n      if (minSeconds < data[i].timestamp) {\n        arr.unshift(data[i]);\n      }\n    }\n    return arr;\n  }, [data, selectedOption]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const selectOption = useCallback(\n    (selectedOption) => {\n      setSelectedOption(selectedOption);\n      handleClose();\n    },\n    [setSelectedOption, handleClose]\n  );\n\n  const isOpen = Boolean(anchorEl);\n  return (\n    <Card>\n      <Box pt={2} px={2} pb={4}>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <div>\n            <Typography variant=\"subtitle1\">{title}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {getSubtitle()}\n            </Typography>\n          </div>\n          <div>\n            <IconButton\n              aria-label=\"More\"\n              aria-owns={isOpen ? \"long-menu\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n              size=\"large\">\n              <MoreVertIcon />\n            </IconButton>\n            <Menu\n              id=\"long-menu\"\n              anchorEl={anchorEl}\n              open={isOpen}\n              onClose={handleClose}\n              PaperProps={{\n                style: {\n                  maxHeight: itemHeight,\n                  width: 200,\n                },\n              }}\n              disableScrollLock\n            >\n              {options.map((option) => (\n                <MenuItem\n                  key={option}\n                  selected={option === selectedOption}\n                  onClick={() => {\n                    selectOption(option);\n                  }}\n                  name={option}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n        </Box>\n      </Box>\n      <CardContent>\n        <Box className={classes.cardContentInner} height={height}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart data={processData()} type=\"number\">\n              <XAxis\n                dataKey=\"timestamp\"\n                type=\"number\"\n                domain={[\"dataMin\", \"dataMax\"]}\n                hide\n              />\n              <YAxis\n                domain={[calculateMin(data, \"value\", 0.05), \"dataMax\"]}\n                hide\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"value\"\n                stroke={color}\n                fill={color}\n              />\n              <Tooltip\n                labelFormatter={labelFormatter}\n                formatter={formatter}\n                cursor={false}\n                contentStyle={{\n                  border: \"none\",\n                  padding: theme.spacing(1),\n                  borderRadius: theme.shape.borderRadius,\n                  boxShadow: theme.shadows[1],\n                }}\n                labelStyle={theme.typography.body1}\n                itemStyle={{\n                  fontSize: theme.typography.body1.fontSize,\n                  letterSpacing: theme.typography.body1.letterSpacing,\n                  fontFamily: theme.typography.body1.fontFamily,\n                  lineHeight: theme.typography.body1.lineHeight,\n                  fontWeight: theme.typography.body1.fontWeight,\n                }}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nCardChart.propTypes = {\n  color: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  height: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CardChart);\n"],"sourceRoot":""}