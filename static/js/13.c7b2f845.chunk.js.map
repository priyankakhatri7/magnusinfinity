{"version":3,"sources":["shared/components/ColoredButton.js","shared/components/DialogTitleWithCloseIcon.js","shared/components/FormDialog.js","logged_in/components/subscription/stripe/StripeTextField.js","logged_in/components/subscription/stripe/StripeCardForm.js","logged_in/components/subscription/stripe/StripeIBANForm.js","logged_in/components/subscription/AddBalanceDialog.js"],"names":["memo","props","color","children","theme","buttonTheme","createTheme","adaptV4Theme","Object","_Users_priyankakhatri_IdeaProjects_magnus_infinity_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","palette","primary","main","buttonProps","_ref","_Users_priyankakhatri_IdeaProjects_magnus_infinity_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_mui_material__WEBPACK_IMPORTED_MODULE_5__","injectFirst","_mui_material__WEBPACK_IMPORTED_MODULE_6__","_mui_material__WEBPACK_IMPORTED_MODULE_7__","assign","withTheme","paddingBottom","onClose","disabled","title","disablePadding","react_default","DialogTitle","style","spacing","paddingLeft","paddingRight","paddingTop","width","Box","display","justifyContent","Typography","variant","IconButton","onClick","marginRight","marginTop","aria-label","size","Close_default","withStyles","dialogPaper","flexDirection","alignItems","maxWidth","actions","dialogPaperScrollPaper","maxHeight","dialogContent","classes","open","loading","headline","onFormSubmit","content","hideBackdrop","Dialog","disableEscapeKeyDown","paper","paperScrollPaper","components_DialogTitleWithCloseIcon","DialogContent","className","onSubmit","stripeOptions","StripeElement","select","rest","objectWithoutProperties","options","objectSpread","base","typography","body1","text","fontSize","fontSmoothing","::placeholder","secondary","invalid","iconColor","error","TextField","InputLabelProps","shrink","inputProps","component","StripeCardForm","stripeError","setStripeError","amount","amountError","onAmountChange","name","setName","Grid","container","item","xs","margin","required","label","value","onChange","event","target","fullWidth","autoFocus","autoComplete","type","parseInt","helperText","InputProps","startAdornment","InputAdornment","position","stripe_StripeTextField","CardElement","StripeIBANForm","email","setEmail","IbanElement","supportedCountries","stripePromise","loadStripe","paymentOptions","AddBalanceDialog","onSuccess","_useState","useState","_useState2","slicedToArray","setLoading","_useState3","_useState4","paymentOption","setPaymentOption","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","setAmount","_useState13","_useState14","setAmountError","elements","useElements","stripe","useStripe","getStripePaymentInfo","card","getElement","billing_details","sepa_debit","Error","FormDialog","asyncToGenerator","regenerator_default","mark","_callee","_yield$stripe$createP","wrap","_context","prev","next","preventDefault","abrupt","createPaymentMethod","sent","message","stop","_x","apply","this","arguments","pb","mb","map","option","key","ColoredButton","disableElevation","common","black","react","stripe_StripeCardForm","HighlightedInformation","stripe_StripeIBANForm","renderPaymentComponent","Button","ButtonCircularProgress","Wrapper","react_stripe_umd"],"mappings":"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","file":"static/js/13.c7b2f845.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, createTheme, ThemeProvider, StyledEngineProvider, adaptV4Theme } from \"@mui/material\";\n\nfunction ColoredButton(props) {\n  const { color, children, theme } = props;\n  const buttonTheme = createTheme(adaptV4Theme({\n    ...theme,\n    palette: {\n      primary: {\n        main: color\n      }\n    }\n  }));\n  const buttonProps = (({ color, theme, children, ...o }) => o)(props);\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={buttonTheme}>\n        <Button {...buttonProps} color=\"primary\">\n          {children}\n        </Button>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nColoredButton.propTypes = {\n  color: PropTypes.string.isRequired\n};\n\nexport default memo(ColoredButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, DialogTitle, Typography, Box } from \"@mui/material\";\nimport withTheme from '@mui/styles/withTheme';\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nfunction DialogTitleWithCloseIcon(props) {\n  const {\n    theme,\n    paddingBottom,\n    onClose,\n    disabled,\n    title,\n    disablePadding\n  } = props;\n  return (\n    <DialogTitle\n      style={{\n        paddingBottom: paddingBottom\n          ? paddingBottom && disablePadding\n            ? 0\n            : paddingBottom\n          : theme.spacing(3),\n        paddingLeft: disablePadding ? 0 : null,\n        paddingRight: disablePadding ? 0 : null,\n        paddingTop: disablePadding ? 0 : theme.spacing(2),\n        width: \"100%\"\n      }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"h5\">{title}</Typography>\n        <IconButton\n          onClick={onClose}\n          style={{ marginRight: -12, marginTop: -10 }}\n          disabled={disabled}\n          aria-label=\"Close\"\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </Box>\n    </DialogTitle>\n  );\n}\n\nDialogTitleWithCloseIcon.propTypes = {\n  theme: PropTypes.object,\n  paddingBottom: PropTypes.number,\n  onClose: PropTypes.func,\n  disabled: PropTypes.bool,\n  title: PropTypes.string,\n  disablePadding: PropTypes.bool\n};\n\nexport default withTheme(DialogTitleWithCloseIcon);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogContent, Box } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport DialogTitleWithCloseIcon from \"./DialogTitleWithCloseIcon\";\n\nconst styles = theme => ({\n  dialogPaper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingBottom: theme.spacing(3),\n    maxWidth: 420\n  },\n  actions: {\n    marginTop: theme.spacing(2)\n  },\n  dialogPaperScrollPaper: {\n    maxHeight: \"none\"\n  },\n  dialogContent: {\n    paddingTop: 0,\n    paddingBottom: 0\n  }\n});\n\n/**\n * A Wrapper around the Dialog component to create centered\n * Login, Register or other Dialogs.\n */\nfunction FormDialog(props) {\n  const {\n    classes,\n    open,\n    onClose,\n    loading,\n    headline,\n    onFormSubmit,\n    content,\n    actions,\n    hideBackdrop\n  } = props;\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      disableEscapeKeyDown={loading}\n      classes={{\n        paper: classes.dialogPaper,\n        paperScrollPaper: classes.dialogPaperScrollPaper\n      }}\n      hideBackdrop={hideBackdrop ? hideBackdrop : false}>\n      <DialogTitleWithCloseIcon\n        title={headline}\n        onClose={onClose}\n        disabled={loading}\n      />\n      <DialogContent className={classes.dialogContent}>\n        <form onSubmit={onFormSubmit}>\n          <div>{content}</div>\n          <Box width=\"100%\" className={classes.actions}>\n            {actions}\n          </Box>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nFormDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  headline: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n  content: PropTypes.element.isRequired,\n  actions: PropTypes.element.isRequired,\n  hideBackdrop: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(FormDialog);\n","import React from \"react\";\nimport { TextField } from \"@mui/material\";\nimport withTheme from \"@mui/styles/withTheme\";\n\nfunction StripeTextField(props) {\n  const { stripeOptions, StripeElement, select, theme, ...rest } = props;\n  const options = {\n    style: {\n      base: {\n        ...theme.typography.body1,\n        color: theme.palette.text.primary,\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: theme.palette.text.secondary,\n        },\n      },\n      invalid: {\n        iconColor: theme.palette.error.main,\n        color: theme.palette.error.main,\n      },\n    },\n    ...stripeOptions,\n  };\n  return (\n    <TextField\n      InputLabelProps={{\n        shrink: true,\n      }}\n      inputProps={{ component: StripeElement, options: options }}\n      {...rest}\n    />\n  );\n}\n\nexport default withTheme(StripeTextField);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Grid, InputAdornment } from \"@mui/material\";\nimport { CardElement } from \"@stripe/react-stripe-js\";\nimport StripeTextField from \"./StripeTextField\";\n\nfunction StripeCardForm(props) {\n  const {\n    stripeError,\n    setStripeError,\n    amount,\n    amountError,\n    onAmountChange,\n    name,\n    setName\n  } = props;\n  return (\n    <Grid container spacing={2} justifyContent=\"space-between\">\n      <Grid item xs={8}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"none\"\n          required\n          label=\"Your Name\"\n          value={name}\n          onChange={event => {\n            setName(event.target.value);\n          }}\n          fullWidth\n          autoFocus\n          autoComplete=\"off\"\n          type=\"text\"\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          required\n          value={amount}\n          onChange={event => {\n            onAmountChange(parseInt(event.target.value));\n          }}\n          error={amountError ? true : false}\n          helperText={amountError}\n          variant=\"outlined\"\n          fullWidth\n          type=\"number\"\n          margin=\"none\"\n          label=\"Amount\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <StripeTextField\n          margin=\"none\"\n          fullWidth\n          label=\"Credit Card\"\n          error={stripeError ? true : false}\n          helperText={stripeError}\n          variant=\"outlined\"\n          required\n          StripeElement={CardElement}\n          onChange={() => {\n            if (stripeError) {\n              setStripeError(\"\");\n            }\n          }}\n        ></StripeTextField>\n      </Grid>\n    </Grid>\n  );\n}\n\nStripeCardForm.propTypes = {\n  stripeError: PropTypes.string.isRequired,\n  setStripeError: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  amountError: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired\n};\n\nexport default StripeCardForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Grid, InputAdornment } from \"@mui/material\";\nimport StripeTextField from \"./StripeTextField\";\nimport { IbanElement } from \"@stripe/react-stripe-js\";\n\nfunction StripeIBANForm(props) {\n  const {\n    stripeError,\n    setStripeError,\n    amount,\n    amountError,\n    onAmountChange,\n    name,\n    setName,\n    email,\n    setEmail\n  } = props;\n  return (\n    <Grid container spacing={2} justifyContent=\"space-between\">\n      <Grid item xs={8}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"none\"\n          required\n          label=\"Your Name\"\n          value={name}\n          onChange={event => {\n            setName(event.target.value);\n          }}\n          fullWidth\n          autoFocus\n          autoComplete=\"off\"\n          type=\"text\"\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          required\n          value={amount}\n          onChange={event => {\n            onAmountChange(parseInt(event.target.value));\n          }}\n          error={amountError ? true : false}\n          helperText={amountError}\n          variant=\"outlined\"\n          fullWidth\n          type=\"number\"\n          margin=\"none\"\n          label=\"Amount\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          required\n          variant=\"outlined\"\n          fullWidth\n          value={email}\n          onChange={event => {\n            setEmail(event.target.value);\n          }}\n          type=\"email\"\n          margin=\"none\"\n          label=\"Email\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <StripeTextField\n          margin=\"none\"\n          variant=\"outlined\"\n          fullWidth\n          label=\"IBAN\"\n          error={stripeError ? true : false}\n          helperText={stripeError}\n          required\n          StripeElement={IbanElement}\n          stripeOptions={{ supportedCountries: [\"SEPA\"] }}\n          onChange={() => {\n            if (stripeError) {\n              setStripeError(\"\");\n            }\n          }}\n        ></StripeTextField>\n      </Grid>\n    </Grid>\n  );\n}\n\nStripeIBANForm.propTypes = {\n  stripeError: PropTypes.string.isRequired,\n  setStripeError: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  amountError: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  setEmail: PropTypes.func.isRequired\n};\n\nexport default StripeIBANForm;\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Elements,\n  CardElement,\n  IbanElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport { Grid, Button, Box } from \"@mui/material\";\nimport withTheme from '@mui/styles/withTheme';\nimport StripeCardForm from \"./stripe/StripeCardForm\";\nimport StripeIbanForm from \"./stripe/StripeIBANForm\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport ColoredButton from \"../../../shared/components/ColoredButton\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst stripePromise = loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\n\nconst paymentOptions = [\"Credit Card\", \"SEPA Direct Debit\"];\n\nconst AddBalanceDialog = withTheme(function (props) {\n  const { open, theme, onClose, onSuccess } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [paymentOption, setPaymentOption] = useState(\"Credit Card\");\n  const [stripeError, setStripeError] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [amountError, setAmountError] = useState(\"\");\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const onAmountChange = amount => {\n    if (amount < 0) {\n      return;\n    }\n    if (amountError) {\n      setAmountError(\"\");\n    }\n    setAmount(amount);\n  };\n\n  const getStripePaymentInfo = () => {\n    switch (paymentOption) {\n      case \"Credit Card\": {\n        return {\n          type: \"card\",\n          card: elements.getElement(CardElement),\n          billing_details: { name: name }\n        };\n      }\n      case \"SEPA Direct Debit\": {\n        return {\n          type: \"sepa_debit\",\n          sepa_debit: elements.getElement(IbanElement),\n          billing_details: { email: email, name: name }\n        };\n      }\n      default:\n        throw new Error(\"No case selected in switch statement\");\n    }\n  };\n\n  const renderPaymentComponent = () => {\n    switch (paymentOption) {\n      case \"Credit Card\":\n        return (\n          <Fragment>\n            <Box mb={2}>\n              <StripeCardForm\n                stripeError={stripeError}\n                setStripeError={setStripeError}\n                setName={setName}\n                name={name}\n                amount={amount}\n                amountError={amountError}\n                onAmountChange={onAmountChange}\n              />\n            </Box>\n            <HighlightedInformation>\n              You can check this integration using the credit card number{\" \"}\n              <b>4242 4242 4242 4242 04 / 24 24 242 42424</b>\n            </HighlightedInformation>\n          </Fragment>\n        );\n      case \"SEPA Direct Debit\":\n        return (\n          <Fragment>\n            <Box mb={2}>\n              <StripeIbanForm\n                stripeError={stripeError}\n                setStripeError={setStripeError}\n                setName={setName}\n                setEmail={setEmail}\n                name={name}\n                email={email}\n                amount={amount}\n                amountError={amountError}\n                onAmountChange={onAmountChange}\n              />\n            </Box>\n            <HighlightedInformation>\n              You can check this integration using the IBAN\n              <br />\n              <b>DE89370400440532013000</b>\n            </HighlightedInformation>\n          </Fragment>\n        );\n      default:\n        throw new Error(\"No case selected in switch statement\");\n    }\n  };\n\n  return (\n    <FormDialog\n      open={open}\n      onClose={onClose}\n      headline=\"Add Balance\"\n      hideBackdrop={false}\n      loading={loading}\n      onFormSubmit={async event => {\n        event.preventDefault();\n        if (amount <= 0) {\n          setAmountError(\"Can't be zero\");\n          return;\n        }\n        if (stripeError) {\n          setStripeError(\"\");\n        }\n        setLoading(true);\n        const { error } = await stripe.createPaymentMethod(\n          getStripePaymentInfo()\n        );\n        if (error) {\n          setStripeError(error.message);\n          setLoading(false);\n          return;\n        }\n        onSuccess();\n      }}\n      content={\n        <Box pb={2}>\n          <Box mb={2}>\n            <Grid container spacing={1}>\n              {paymentOptions.map(option => (\n                <Grid item key={option}>\n                  <ColoredButton\n                    variant={\n                      option === paymentOption ? \"contained\" : \"outlined\"\n                    }\n                    disableElevation\n                    onClick={() => {\n                      setStripeError(\"\");\n                      setPaymentOption(option);\n                    }}\n                    color={theme.palette.common.black}\n                  >\n                    {option}\n                  </ColoredButton>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n          {renderPaymentComponent()}\n        </Box>\n      }\n      actions={\n        <Fragment>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            size=\"large\"\n            disabled={loading}\n          >\n            Pay with Stripe {loading && <ButtonCircularProgress />}\n          </Button>\n        </Fragment>\n      }\n    />\n  );\n});\n\nAddBalanceDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  theme: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nfunction Wrapper(props) {\n  const { open, onClose, onSuccess } = props;\n  return (\n    <Elements stripe={stripePromise}>\n      {open && (\n        <AddBalanceDialog open={open} onClose={onClose} onSuccess={onSuccess} />\n      )}\n    </Elements>\n  );\n}\n\n\nWrapper.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default Wrapper;\n"],"sourceRoot":""}